<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:cluster="http://www.mulesoft.org/schema/mule/ee/cluster" xmlns:tracking="http://www.mulesoft.org/schema/mule/ee/tracking" xmlns:dw="http://www.mulesoft.org/schema/mule/ee/dw" xmlns:ws="http://www.mulesoft.org/schema/mule/ws" xmlns:metadata="http://www.mulesoft.org/schema/mule/metadata" xmlns:db="http://www.mulesoft.org/schema/mule/db" xmlns:http="http://www.mulesoft.org/schema/mule/http" xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation"
	xmlns:spring="http://www.springframework.org/schema/beans" 
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-current.xsd
http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/db http://www.mulesoft.org/schema/mule/db/current/mule-db.xsd
http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd
http://www.mulesoft.org/schema/mule/ee/dw http://www.mulesoft.org/schema/mule/ee/dw/current/dw.xsd
http://www.mulesoft.org/schema/mule/ws http://www.mulesoft.org/schema/mule/ws/current/mule-ws.xsd
http://www.mulesoft.org/schema/mule/ee/tracking http://www.mulesoft.org/schema/mule/ee/tracking/current/mule-tracking-ee.xsd">
    <http:listener-config name="HTTP_Listener_Configuration" host="0.0.0.0" port="8081" doc:name="HTTP Listener Configuration"/>
    <db:mysql-config name="MySQL_Configuration" host="mudbmulesoft-training.com" port="3306" user="mule" password="mule" database="training" doc:name="MySQL Configuration"/>
    <http:request-config name="HTTP_Request_Configuration" host="ilt.mulesoft-training.com" port="80" basePath="/essentials/united/flights" doc:name="HTTP Request Configuration"/>
    <http:request-config name="HTTP_Request_Configuration1" host="ilt.mulesoft-training.com" port="80" basePath="/essentials/united/flights" doc:name="HTTP Request Configuration"/>
    <ws:consumer-config name="Web_Service_Consumer" wsdlLocation="http://ilt.mulesoft-training.com/essentials/delta?wsdl" service="TicketServiceService" port="TicketServicePort" serviceAddress="http://ilt.mulesoft-training.com/essentials/delta" doc:name="Web Service Consumer"/>
    <configuration defaultExceptionStrategy-ref="globalCatch_Exception_Strategy2" doc:name="Configuration">
        <http:config useTransportForUris="false"/>
    </configuration>
    <flow name="flightsFlow-american">
        <http:listener config-ref="HTTP_Listener_Configuration" path="/path" allowedMethods="GET" doc:name="HTTP"/>
        <set-variable variableName="dest" value="#[message.inboundProperties.'http.query.params'.dest]" doc:name="Variable"/>
        <db:select config-ref="MySQL_Configuration" doc:name="Database">
            <db:parameterized-query><![CDATA[select * from american where toAirport =#[flowVars.dest]]]></db:parameterized-query>
        </db:select>
        <dw:transform-message doc:name="Transform Message" metadata:id="ec07e56c-ce7c-4dd9-b21e-90776ac83568">
            <dw:set-payload><![CDATA[%dw 1.0
%output application/json
---
payload map ((payload01 , indexOfPayload01) -> {
	ID: payload01.ID,
	code: payload01.code1++ payload01.code2,
	totalSeats: payload01.totalSeats as :number,
	"Destination ": payload01.toAirport,
	"Depature date": payload01.takeOffDate as :string,
	Origin: payload01.fromAirport,
	price: payload01.price as :number,
	"Empty seats": payload01.seatsAvailable as :number,
	plane: {
		Type: payload01.planeType
	}
})]]></dw:set-payload>
        </dw:transform-message>
        <logger message="#[payload]" level="INFO" doc:name="Logger"/>
    </flow>
    <flow name="flightsFlow-united">
        <http:listener config-ref="HTTP_Listener_Configuration" path="/mou" allowedMethods="GET" doc:name="HTTP"/>
        <set-variable variableName="dest" value="#[message.inboundProperties.'http.query.params'.dest]" doc:name="Variable"/>
        <http:request config-ref="HTTP_Request_Configuration1" path="/{destination}" method="GET" doc:name="HTTP">
            <http:request-builder>
                <http:uri-param paramName="destination" value="#[flowVars.dest]"/>
            </http:request-builder>
        </http:request>
        <dw:transform-message doc:name="Transform Message" metadata:id="9305d14f-6e61-4aa5-99d8-d86e348ef7b5">
            <dw:input-payload mimeType="application/json"/>
            <dw:set-payload><![CDATA[%dw 1.0
%output application/json
---
payload.flights map ((flight , indexOfFlight) -> {
	code: flight.code,
	"Destination ": flight.destination,
	"Depature date": flight.departureDate,
	Origin: flight.origin,
	price: flight.price,
	"Empty seats": flight.emptySeats,
	plane: {
		Type: flight.planeType
	}
})]]></dw:set-payload>
        </dw:transform-message>
        <logger message="#[payload]" level="INFO" doc:name="Logger"/>
    </flow>
    <flow name="flightsFlow-delta">
        <http:listener config-ref="HTTP_Listener_Configuration" path="/soap" allowedMethods="GET" doc:name="HTTP"/>
        <set-variable variableName="dest" value="#[message.inboundProperties.'http.query.params'.dest]" doc:name="Variable"/>
        <dw:transform-message doc:name="Transform Message">
            <dw:set-payload><![CDATA[%dw 1.0
%output application/xml
%namespace ns0 http://soap.training.mulesoft.com/
---
{
	ns0#findFlight: {
		destination: flowVars.dest as :string
	}
}]]></dw:set-payload>
        </dw:transform-message>
        <ws:consumer config-ref="Web_Service_Consumer" operation="findFlight" doc:name="Web Service Consumer"/>
        <dw:transform-message doc:name="Transform Message" metadata:id="9819512a-1113-41fc-b66a-9c5228c7df9e">
            <dw:set-payload><![CDATA[%dw 1.0
%output application/json
%namespace ns0 http://soap.training.mulesoft.com/
---
payload.ns0#findFlightResponse.*return map ((return , indexOfReturn) -> {
	code: return.code,
	"Destination ": return.destination,
	"Depature date": return.departureDate,
	Origin: return.origin,
	price: return.price,
	"Empty seats": return.emptySeats,
	plane: {
		Type: return.planeType
	}
})]]></dw:set-payload>
        </dw:transform-message>
        <ws:consumer config-ref="Web_Service_Consumer" operation="findFlight" doc:name="Web Service Consumer"/>
        <logger message="#[payload]" level="INFO" doc:name="Logger"/>
    </flow>
</mule>
